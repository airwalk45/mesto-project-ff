{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/initialCards.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["\n// @todo: Функция создания карточки\n\nfunction addCard(addCardObj, userID) {\n  const cardElement = addCardObj.cardTemplate\n    .querySelector(\".card\")\n    .cloneNode(true);\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const imgElement = cardElement.querySelector(\".card__image\");\n  const likeNumber = cardElement.querySelector(\".card__like-number\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n\n  imgElement.src = addCardObj.item.link;\n  imgElement.alt = addCardObj.item.name;\n  cardTitle.textContent = addCardObj.item.name;\n  likeNumber.textContent = addCardObj.item.likes.length;\n\n  function hasMyLike(num) {\n    return num._id === userID;\n  }\n\n  if (addCardObj.item.likes.some(hasMyLike)) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  } \n\n  likeButton.addEventListener(\"click\", addCardObj.addLikeToCard);\n\n  imgElement.addEventListener(\"click\", addCardObj.zoomCardImg);\n\n  if (addCardObj.item.owner._id === userID) {\n    deleteButton.addEventListener(\"click\", addCardObj.removeCard);\n  } else {\n    deleteButton.remove();\n  }\n\n  return cardElement;\n}\n\n// @todo: Функция удаления карточки\nfunction removeCardFromDom(cardElement) {\n  cardElement.remove();\n}\n\n// @todo: Функция лайка карточки\nfunction checkLikeCard(cardElement, newItem) {\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeNumber = cardElement.querySelector(\".card__like-number\");\n  likeNumber.textContent = newItem.likes.length;\n  likeButton.classList.toggle(\"card__like-button_is-active\");\n}\n\nexport { addCard, removeCardFromDom, checkLikeCard };\n","// Функция открытия модального окна\r\nfunction openModal(domModal) {\r\n  domModal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeModalEscape);\r\n}\r\n\r\n// Функция закрытия модального окна\r\nfunction closeModal(domModal) {\r\n  domModal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeModalEscape);\r\n}\r\n\r\nfunction closeModalEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openedPopup);\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","const initialCards = [\r\n  {\r\n    name: \"Архыз\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n  },\r\n  {\r\n    name: \"Челябинская область\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n  },\r\n  {\r\n    name: \"Иваново\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n  },\r\n  {\r\n    name: \"Камчатка\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n  },\r\n  {\r\n    name: \"Холмогорский район\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n  },\r\n];\r\n\r\nexport { initialCards };\r\n","// включение валидации вызовом enableValidation\r\n// все настройки передаются при вызове\r\n/*\r\nenableValidation({\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}); \r\n*/\r\n\r\nconst showInputError = (formElement, inputElement, errorClassObject) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(errorClassObject.inputErrorClass);\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  errorElement.classList.add(errorClassObject.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, errorClassObject) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(errorClassObject.inputErrorClass);\r\n  errorElement.classList.remove(errorClassObject.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, errorClassObject) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else if (inputElement.validity.valueMissing) {\r\n    inputElement.setCustomValidity(inputElement.dataset.emptyMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, errorClassObject);\r\n  } else {\r\n    hideInputError(formElement, inputElement, errorClassObject);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, errorClassObject) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(errorClassObject.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    errorClassObject.submitButtonSelector\r\n  );\r\n  //  toggleButtonState(inputList,buttonElement,errorClassObject);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement, errorClassObject);\r\n      toggleButtonState(inputList, buttonElement, errorClassObject);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (errorClassObject) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(errorClassObject.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    /*\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    */\r\n    setEventListeners(formElement, errorClassObject);\r\n  });\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, errorClassObject) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(errorClassObject.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(errorClassObject.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n}\r\n\r\n/*\r\nclearValidation(profileForm, validationConfig);\r\n */\r\n\r\nconst clearValidation = (formElement, errorClassObject) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(errorClassObject.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    errorClassObject.submitButtonSelector\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    //  inputElement.addEventListener('input', function () {\r\n    hideInputError(formElement, inputElement, errorClassObject);\r\n    inputElement.setCustomValidity(\"\");\r\n    //  });\r\n  });\r\n  formElement.reset()\r\n  toggleButtonState(inputList, buttonElement, errorClassObject);\r\n};\r\n\r\nexport { enableValidation, clearValidation };\r\n","const apiToken = \"7e5bc3b7-9b3c-4476-a6ed-5dc02c289290\";\r\nconst apiId = \"wff-cohort-10\";\r\nconst apiServer = \"https://mesto.nomoreparties.co\";\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(res.status);\r\n}\r\n\r\n//Загрузка информации о пользователе с сервера\r\nconst getUserInfo = () => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me\", {\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n};\r\n\r\n//Загрузка карточек с сервера\r\nconst getCardsList = () => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards\", {\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n};\r\n\r\n//Редактирование профиля\r\nfunction patchUserInfo(userInfo) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: userInfo.name,\r\n      about: userInfo.about,\r\n    }),\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n}\r\n\r\n//Добавление новой карточки\r\nconst patchCard = (cardInfo) => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: cardInfo.name,\r\n      link: cardInfo.link,\r\n    }),\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n};\r\n\r\n//Удаление карточки\r\nfunction deleteCard(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  })\r\n  .then((res) => {\r\n    handleResponse(res)\r\n  });\r\n}\r\n\r\n//Постановка лайка\r\nfunction putLike(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/likes/\" + id, {\r\n    method: \"put\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n}\r\n\r\n////Снятие лайка\r\nfunction deleteLike(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/likes/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n}\r\n\r\n//Редактирование аватара\r\nfunction patchUserAvatar(linkAvatarValue) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me/avatar\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      avatar: linkAvatarValue,\r\n    }),\r\n  }).then((res) => {\r\n    handleResponse(res)\r\n  });\r\n}\r\n\r\nexport {\r\n  getUserInfo,\r\n  getCardsList,\r\n  patchUserInfo,\r\n  patchCard,\r\n  deleteCard,\r\n  putLike,\r\n  deleteLike,\r\n  patchUserAvatar,\r\n};\r\n","/*=====================\nБлок импорта\n=======================*/\nimport \"./pages/index.css\"; //Главный CSS\nimport { addCard, removeCardFromDom, checkLikeCard } from \"./scripts/cards.js\"; //функции карточек\nimport { openModal, closeModal } from \"./scripts/modal.js\"; //функции попапов\nimport { initialCards } from \"./scripts/initialCards.js\"; //базовые страницы при загрузке\nimport { enableValidation, clearValidation } from \"./scripts/validation.js\";\nimport {\n  getUserInfo,\n  getCardsList,\n  patchUserInfo,\n  patchCard,\n  deleteCard,\n  putLike,\n  deleteLike,\n  patchUserAvatar,\n} from \"./scripts/api.js\";\n\n/*=====================\nБлок констант\n=======================*/\nconst cardList = document.querySelector(\".places__list\"); // список карточек\nconst cardTemplate = document.querySelector(\"#card-template\").content; // темплейт карточки\nconst addCardObj = {\n  item: \"\",\n  removeCard: \"\",\n  cardTemplate: cardTemplate,\n  addLikeToCard: \"\",\n  zoomCardImg: zoomCardImg,\n}; // объект с необходимым содержимым для функции создания карточки\nconst buttonNewCard = document.querySelector(\".profile__add-button\"); // кнопка добавления новой карточки\nconst buttonEdit = document.querySelector(\".profile__edit-button\"); // кнопка редактирования заголовка страницы\nconst buttonEditAvatar = document.querySelector(\".profile__image\"); // кнопка редактирования заголовка страницы\n\nconst modalNewCard = document.querySelector(\".popup_type_new-card\"); // попап добавления новой карточки\nconst modalEdit = document.querySelector(\".popup_type_edit\"); // попап добавления новой карточки\nconst modalEditAvatar = document.querySelector(\".popup_type_edit-avatar\"); // попап добавления новой карточки\nconst modalImageZoom = document.querySelector(\".popup_type_image\"); // попап увеличенного просмотра карточки\n\nconst popups = document.querySelectorAll(\".popup\"); //Массив всех всплывающих окон с общим классом\n\nconst profileForm = document.querySelector('[name=\"edit-profile\"]'); // форма редактирования шапки страницы\nconst nameInput = profileForm.querySelector('[name=\"name\"]'); // поле ввода имени в форме для шапки страницы\nconst jobInput = profileForm.querySelector('[name=\"description\"]'); // поле ввода описания в форме для шапки страницы\n\nconst profileTitle = document.querySelector(\".profile__title\"); // имя в шапке страницы\nconst profileDescription = document.querySelector(\".profile__description\"); // описание в шапке страницы\nconst profileImg = document.querySelector(\".profile__image\"); // Изображение в шапке\n\nconst profileData = {\n  profileTitle: profileTitle,\n  profileDescription: profileDescription,\n  profileImg: profileImg,\n};\n\nconst formNewCard = document.querySelector('[name=\"new-place\"]');\nconst placeName = formNewCard.querySelector('[name=\"place-name\"]');\nconst linkUrl = formNewCard.querySelector('[name=\"link\"]');\n\nconst avatarForm = document.querySelector('[name=\"new-avatar\"]'); // форма редактирования шапки страницы\nconst avatarUrl = avatarForm.querySelector('[name=\"link\"]');\n\nconst modalDelete = document.querySelector(\".popup_type_confirm\"); // попап подтверждения удаления\nconst formDelete = modalDelete.querySelector('[name=\"delete-confirm\"]');\nlet cardForDelete = {};\n\n\nconst errorClassObject = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\", //класс ошибки для поля ввода\n  errorClass: \"popup__error_visible\", //класс для текста ошибки под полем ввода\n};\n\n/*=====================\nБлок функций\n=======================*/\n// @todo: Функция zoom карточки\nfunction zoomCardImg(evt) {\n  const popupImage = document.querySelector(\".popup__image\"); //изображение на всплывающем окне \"Зум изображения\"\n  const popupCaption = document.querySelector(\".popup__caption\"); //подпись на всплывающем окне \"Зум изображения\"\n  popupImage.src = evt.target.src;\n  popupImage.alt = evt.target.alt;\n  popupCaption.textContent = evt.target.alt;\n  openModal(modalImageZoom);\n}\n\nformDelete.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  renderDeleting(true, evt);\n  deleteCard(cardForDelete._id)\n  .then(() => {\n    removeCardFromDom(cardForDelete.cardElement);\n    closeModal(modalDelete);    \n  })\n  .catch((err) => {\n    console.log(err);\n  })\n  .finally(() => {\n    renderDeleting(false, evt);\n  });\n})\n\nfunction addCardElement(item, method, userID) {\n  addCardObj.item = item;\n  addCardObj.removeCard = () => {\n    cardForDelete._id = item._id;\n    cardForDelete.cardElement = cardElement;    \n    openModal(modalDelete);\n  };\n  addCardObj.addLikeToCard = (evt) => {\n    if (evt.target.classList.contains(\"card__like-button_is-active\")) {\n      deleteLike(item._id)\n        .then((newItem) => {\n          checkLikeCard(cardElement, newItem);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      putLike(item._id)\n        .then((newItem) => {\n          checkLikeCard(cardElement, newItem);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const cardElement = addCard(addCardObj, userID);\n  cardList[method](cardElement);\n}\n\n// добавление на попап плавного открытия и закрытия\nmodalNewCard.classList.add(\"popup_is-animated\");\nmodalEdit.classList.add(\"popup_is-animated\");\nmodalEditAvatar.classList.add(\"popup_is-animated\");\nmodalImageZoom.classList.add(\"popup_is-animated\");\n\n// Слушатель открытия popUp новой карты\nbuttonNewCard.addEventListener(\"click\", () => {\n  const formElement = modalNewCard.querySelector(errorClassObject.formSelector);\n  clearValidation(formElement, errorClassObject);\n  openModal(modalNewCard);\n});\n\n// Слушатель открытия popUp редактирования аватара\nbuttonEditAvatar.addEventListener(\"click\", () => {\n  const formElement = modalEditAvatar.querySelector(\n    errorClassObject.formSelector\n  );\n  clearValidation(formElement, errorClassObject);\n  openModal(modalEditAvatar);\n});\n\n// @Слушатель открытия popUp редактирования шапки страницы\nbuttonEdit.addEventListener(\"click\", () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  const formElement = modalEdit.querySelector(errorClassObject.formSelector);\n  clearValidation(formElement, errorClassObject);\n  openModal(modalEdit);\n});\n\npopups.forEach((popup) => {\n  popup.addEventListener(\"mousedown\", (evt) => {\n    if (evt.target.classList.contains(\"popup_is-opened\")) {\n      closeModal(popup);\n    }\n    if (evt.target.classList.contains(\"popup__close\")) {\n      closeModal(popup);\n    }\n  });\n});\n\n// Обработчик «отправки» формы редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n\n  const nameInputValue = nameInput.value;\n  const jobInputValue = jobInput.value;\n\n  profileTitle.textContent = nameInputValue;\n  profileDescription.textContent = jobInputValue;\n\n  const userInfo = {\n    name: nameInputValue,\n    about: jobInputValue,\n  };\n\n  renderLoading(true, evt);\n\n  patchUserInfo(userInfo)\n    .then(() => {\n      closePopupSubmit(evt);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n}\n\n// слушатель «отправки» формы редактирования профиля\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n\n// функция закрытия формы при отправке\nfunction closePopupSubmit(evt) {\n  const modal = evt.target.closest(\".popup_is-opened\");\n  closeModal(modal);\n}\n\n// Обработчик «отправки» формы дабавления карточки\nfunction handleCardFormSubmit(evt) {\n  evt.preventDefault();\n\n  const placeNameValue = placeName.value;\n  const linkUrlValue = linkUrl.value;\n\n  const newCardItem = {\n    name: placeNameValue,\n    link: linkUrlValue,\n  };\n  renderLoading(true, evt);\n\n  patchCard(newCardItem)\n    .then((item) => {\n      addCardElement(item, \"prepend\", item.owner._id);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n\n  formNewCard.reset();\n\n  closePopupSubmit(evt);\n}\n\n// слушатель «отправки» формы добавления карточки\nformNewCard.addEventListener(\"submit\", handleCardFormSubmit);\n\nenableValidation(errorClassObject);\n\nfunction changeProfileData(profileData) {\n  profileTitle.textContent = profileData.name;\n  profileDescription.textContent = profileData.about;\n  profileImg.style = \"background-image: url(\" + profileData.avatar + \")\";\n}\n\nPromise.all([getUserInfo(), getCardsList()])\n  .then((results) => {\n    changeProfileData(results[0]);\n\n    results[1].forEach((item) => {\n      addCardElement(item, \"append\", results[0]._id);\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\n// Обработчик «отправки» формы изменения аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(true, evt);\n  const linkAvatarValue = avatarUrl.value;\n  patchUserAvatar(linkAvatarValue)\n    .then(() => {\n      profileImg.style = \"background-image: url(\" + linkAvatarValue + \")\";\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n\n  avatarForm.reset();\n\n  closePopupSubmit(evt);\n}\n\n// слушатель «отправки» формы редактирования профиля\navatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n\nfunction renderLoading(isLoading, evt) {\n  const button = evt.target.querySelector(\".popup__button\");\n  if (isLoading) {\n    button.textContent = \"Сохранение...\";\n  } else {\n    button.textContent = \"Сохранить\";\n  }\n}\n\nfunction renderDeleting(isLoading, evt) {\n  const button = evt.target.querySelector(\".popup__button\");\n  if (isLoading) {\n    button.textContent = \"Удаляем...\";\n  } else {\n    button.textContent = \"Да\";\n  }\n}\n"],"names":["checkLikeCard","cardElement","newItem","likeButton","querySelector","textContent","likes","length","classList","toggle","openModal","domModal","add","document","addEventListener","closeModalEscape","closeModal","remove","removeEventListener","evt","key","hideInputError","formElement","inputElement","errorClassObject","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","reset","apiToken","apiId","apiServer","handleResponse","res","ok","json","Promise","reject","status","cardList","addCardObj","item","removeCard","cardTemplate","content","addLikeToCard","zoomCardImg","popupImage","popupCaption","src","target","alt","modalImageZoom","buttonNewCard","buttonEdit","buttonEditAvatar","modalNewCard","modalEdit","modalEditAvatar","popups","profileForm","nameInput","jobInput","profileTitle","profileDescription","profileImg","formNewCard","placeName","linkUrl","avatarForm","avatarUrl","modalDelete","formDelete","cardForDelete","formSelector","addCardElement","method","userID","_id","contains","fetch","headers","authorization","then","catch","err","console","log","putLike","cloneNode","deleteButton","imgElement","likeNumber","cardTitle","link","name","num","owner","addCard","closePopupSubmit","closest","renderLoading","isLoading","renderDeleting","preventDefault","finally","value","popup","nameInputValue","jobInputValue","userInfo","about","body","JSON","stringify","patchUserInfo","cardInfo","newCardItem","patternMismatch","dataset","errorMessage","valueMissing","emptyMessage","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","all","results","profileData","style","avatar","linkAvatarValue","patchUserAvatar"],"sourceRoot":""}