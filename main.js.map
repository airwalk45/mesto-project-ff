{"version":3,"file":"main.js","mappings":"mBACA,SAASA,EAAUC,GACjBA,EAASC,UAAUC,IAAI,mBACvBC,SAASC,iBAAiB,UAAWC,EACvC,CAGA,SAASC,EAAWN,GAClBA,EAASC,UAAUM,OAAO,mBAC1BJ,SAASK,oBAAoB,UAAWH,EAC1C,CAEA,SAASA,EAAiBI,GACR,WAAZA,EAAIC,KAENJ,EADoBH,SAASQ,cAAc,oBAG/C,CCJA,IAOMC,EAAiB,SAACC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAYF,cAAc,IAADM,OAAKH,EAAaI,GAAE,WAClEJ,EAAab,UAAUM,OAAOQ,EAAiBI,iBAC/CH,EAAaf,UAAUM,OAAOQ,EAAiBK,YAC/CJ,EAAaK,YAAc,EAC7B,EAqDA,SAASC,EAAkBC,EAAWC,EAAeT,IANrD,SAAyBQ,GACvB,OAAOA,EAAUE,MAAK,SAACX,GACrB,OAAQA,EAAaY,SAASC,KAChC,GACF,CAGMC,CAAgBL,IAIlBC,EAAcvB,UAAUM,OAAOQ,EAAiBc,qBAChDL,EAAcM,UAAW,IAJzBN,EAAcvB,UAAUC,IAAIa,EAAiBc,qBAC7CL,EAAcM,UAAW,EAK7B,CAMA,IAAMC,EAAkB,SAAClB,EAAaE,GACpC,IAAMQ,EAAYS,MAAMC,KACtBpB,EAAYqB,iBAAiBnB,EAAiBoB,gBAE1CX,EAAgBX,EAAYF,cAChCI,EAAiBqB,sBAEnBb,EAAUc,SAAQ,SAACvB,GAEjBF,EAAeC,EAAaC,EAAcC,GAC1CD,EAAawB,kBAAkB,GAEjC,IACAzB,EAAY0B,QACZjB,EAAkBC,EAAWC,EAAeT,EAC9C,EC3GMyB,EAAW,uCACXC,EAAQ,gBACRC,EAAY,iCAEZC,EAAiB,SAACC,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAOJ,EAAIK,OAC5B,EA8DA,SAASC,EAAQhC,GACf,OAAOiC,MAAMT,EAAY,OAASD,EAAQ,gBAAkBvB,EAAI,CAC9DkC,OAAQ,MACRC,QAAS,CACPC,cAAed,KAEhBe,KAAKZ,EACV,CAGA,SAASa,EAAWtC,GAClB,OAAOiC,MAAMT,EAAY,OAASD,EAAQ,gBAAkBvB,EAAI,CAC9DkC,OAAQ,SACRC,QAAS,CACPC,cAAed,KAEhBe,KAAKZ,EACV,C,0GCnEA,IAAMc,EAAWtD,SAASQ,cAAc,iBAElC+C,EAAa,CACjBC,KAAM,GACNC,WAAY,GACZC,aAJmB1D,SAASQ,cAAc,kBAAkBmD,QAK5DC,cAAe,GACfC,YAmDF,SAAqBvD,GACnB,IAAMwD,EAAa9D,SAASQ,cAAc,iBACpCuD,EAAe/D,SAASQ,cAAc,mBAC5CsD,EAAWE,IAAM1D,EAAI2D,OAAOD,IAC5BF,EAAWI,IAAM5D,EAAI2D,OAAOC,IAC5BH,EAAa7C,YAAcZ,EAAI2D,OAAOC,IACtCtE,EAAUuE,EACZ,GAxDMC,EAAgBpE,SAASQ,cAAc,wBACvC6D,EAAarE,SAASQ,cAAc,yBACpC8D,EAAmBtE,SAASQ,cAAc,mBAE1C+D,EAAevE,SAASQ,cAAc,wBACtCgE,EAAYxE,SAASQ,cAAc,oBACnCiE,EAAkBzE,SAASQ,cAAc,2BACzC2D,EAAiBnE,SAASQ,cAAc,qBAExCkE,EAAS1E,SAAS+B,iBAAiB,UAEnC4C,EAAc3E,SAASQ,cAAc,yBACrCoE,EAAYD,EAAYnE,cAAc,iBACtCqE,EAAWF,EAAYnE,cAAc,wBAErCsE,EAAe9E,SAASQ,cAAc,mBACtCuE,EAAqB/E,SAASQ,cAAc,yBAC5CwE,EAAahF,SAASQ,cAAc,mBAQpCyE,EAAcjF,SAASQ,cAAc,sBACrC0E,EAAYD,EAAYzE,cAAc,uBACtC2E,EAAUF,EAAYzE,cAAc,iBAEpC4E,EAAapF,SAASQ,cAAc,uBACpC6E,EAAYD,EAAW5E,cAAc,iBAErC8E,EAActF,SAASQ,cAAc,uBACrC+E,EAAaD,EAAY9E,cAAc,2BACzCgF,EAAgB,CAAC,EAEf5E,EAAmB,CACvB6E,aAAc,eACdzD,cAAe,gBACfC,qBAAsB,iBACtBP,oBAAqB,yBACrBV,gBAAiB,0BACjBC,WAAY,wBAgCd,SAASyE,EAAelC,EAAMP,EAAQ0C,GACpCpC,EAAWC,KAAOA,EAClBD,EAAWE,WAAa,WACtB+B,EAAcI,IAAMpC,EAAKoC,IACzBJ,EAAcK,YAAcA,EAC5BjG,EAAU0F,EACZ,EACA/B,EAAWK,cAAgB,SAACtD,IACPA,EAAI2D,OAAOnE,UAAUgG,SAAS,+BAAgCzC,EAAYN,GAClFS,EAAKoC,KACbxC,MAAK,SAAC2C,ICpEb,SAAuBF,EAAaE,GAClC,IAAMC,EAAaH,EAAYrF,cAAc,sBAC1BqF,EAAYrF,cAAc,sBAClCU,YAAc6E,EAAQE,MAAMC,OACvCF,EAAWlG,UAAUqG,OAAO,8BAC9B,CDgEQC,CAAcP,EAAaE,EAC7B,IACCM,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAIF,EAAI,GACpC,EACA,IAAMT,ECpHR,SAAiBtC,EAAYoC,GAC3B,IAAME,EAActC,EAAWG,aAC5BlD,cAAc,SACdiG,WAAU,GAEPC,EAAeb,EAAYrF,cAAc,wBACzCwF,EAAaH,EAAYrF,cAAc,sBACvCmG,EAAad,EAAYrF,cAAc,gBACvCoG,EAAaf,EAAYrF,cAAc,sBACvCqG,EAAYhB,EAAYrF,cAAc,gBAyB5C,OAvBAmG,EAAW3C,IAAMT,EAAWC,KAAKsD,KACjCH,EAAWzC,IAAMX,EAAWC,KAAKuD,KACjCF,EAAU3F,YAAcqC,EAAWC,KAAKuD,KACxCH,EAAW1F,YAAcqC,EAAWC,KAAKyC,MAAMC,OAM3C3C,EAAWC,KAAKyC,MAAM3E,MAJ1B,SAAmB0F,GACjB,OAAOA,EAAIpB,MAAQD,CACrB,KAGEK,EAAWlG,UAAUC,IAAI,+BAG3BiG,EAAW/F,iBAAiB,QAASsD,EAAWK,eAEhD+C,EAAW1G,iBAAiB,QAASsD,EAAWM,aAE5CN,EAAWC,KAAKyD,MAAMrB,MAAQD,EAChCe,EAAazG,iBAAiB,QAASsD,EAAWE,YAElDiD,EAAatG,SAGRyF,CACT,CDiFsBqB,CAAQ3D,EAAYoC,GACxCrC,EAASL,GAAQ4C,EACnB,CA0EA,SAASsB,EAAiB7G,GAExBH,EADcG,EAAI2D,OAAOmD,QAAQ,oBAEnC,CAgFA,SAASC,EAAcC,EAAWhH,GACjBA,EAAI2D,OAAOzD,cAAc,kBACjCU,YAAcoG,EAAY,gBAAkB,WACrD,CAEA,SAASC,EAAeD,EAAWhH,GAClBA,EAAI2D,OAAOzD,cAAc,kBACjCU,YAAcoG,EAAY,aAAe,IAClD,CAtMA/B,EAAWtF,iBAAiB,UAAU,SAACK,GD5BvC,IAAoBS,EC6BlBT,EAAIkH,iBACJD,GAAe,EAAMjH,ID9BHS,EC+BPyE,EAAcI,ID9BlB5C,MAAMT,EAAY,OAASD,EAAQ,UAAYvB,EAAI,CACxDkC,OAAQ,SACRC,QAAS,CACPC,cAAed,KAGlBe,KAAKZ,ICyBHY,MAAK,WACcoC,EAAcK,YCnDxBzF,SDoDRD,EAAWmF,EACb,IACCe,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCmB,SAAQ,WACPF,GAAe,EAAOjH,EACxB,GACJ,IAsBAiE,EAAazE,UAAUC,IAAI,qBAC3ByE,EAAU1E,UAAUC,IAAI,qBACxB0E,EAAgB3E,UAAUC,IAAI,qBAC9BoE,EAAerE,UAAUC,IAAI,qBAG7BqE,EAAcnE,iBAAiB,SAAS,WACtC,IAAMS,EAAc6D,EAAa/D,cAAcI,EAAiB6E,cAChE7D,EAAgBlB,EAAaE,GAC7BhB,EAAU2E,EACZ,IAGAD,EAAiBrE,iBAAiB,SAAS,WACzC,IAAMS,EAAc+D,EAAgBjE,cAClCI,EAAiB6E,cAEnB7D,EAAgBlB,EAAaE,GAC7BhB,EAAU6E,EACZ,IAGAJ,EAAWpE,iBAAiB,SAAS,WACnC2E,EAAU8C,MAAQ5C,EAAa5D,YAC/B2D,EAAS6C,MAAQ3C,EAAmB7D,YACpC,IAAMR,EAAc8D,EAAUhE,cAAcI,EAAiB6E,cAC7D7D,EAAgBlB,EAAaE,GAC7BhB,EAAU4E,EACZ,IAEAE,EAAOxC,SAAQ,SAACyF,GACdA,EAAM1H,iBAAiB,aAAa,SAACK,IAC/BA,EAAI2D,OAAOnE,UAAUgG,SAAS,oBAC9BxF,EAAI2D,OAAOnE,UAAUgG,SAAS,kBAChC3F,EAAWwH,EAEf,GACF,IA+BAhD,EAAY1E,iBAAiB,UA5B7B,SAAiCK,GAC/BA,EAAIkH,iBAEJ,IAGMI,EAAW,CACfb,KAJqBnC,EAAU8C,MAK/BG,MAJoBhD,EAAS6C,OAO/BL,GAAc,EAAM/G,GDjJtB,SAAuBsH,GACrB,OAAO5E,MAAMT,EAAY,OAASD,EAAQ,YAAa,CACrDW,OAAQ,QACRC,QAAS,CACPC,cAAed,EACf,eAAgB,oBAElByF,KAAMC,KAAKC,UAAU,CACnBjB,KAAMa,EAASb,KACfc,MAAOD,EAASC,UAEjBzE,KAAKZ,EACV,CCuIEyF,CAAcL,GACXxE,MAAK,SAAC8E,GACLpD,EAAa5D,YAAcgH,EAAYnB,KACvChC,EAAmB7D,YAAcgH,EAAYL,MAC7CV,EAAiB7G,EACnB,IACC+F,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCmB,SAAQ,WACPJ,GAAc,EAAO/G,EACvB,GACJ,IAyCA2E,EAAYhF,iBAAiB,UA7B7B,SAA8BK,GAC5BA,EAAIkH,iBAEJ,ID/JiBW,ECkKXC,EAAc,CAClBrB,KAJqB7B,EAAUwC,MAK/BZ,KAJmB3B,EAAQuC,OAM7BL,GAAc,EAAM/G,IDtKH6H,ECwKPC,EDvKHpF,MAAMT,EAAY,OAASD,EAAQ,SAAU,CAClDW,OAAQ,OACRC,QAAS,CACPC,cAAed,EACf,eAAgB,oBAElByF,KAAMC,KAAKC,UAAU,CACnBjB,KAAMoB,EAASpB,KACfD,KAAMqB,EAASrB,SAEhB1D,KAAKZ,IC8JLY,MAAK,SAACI,GACLkC,EAAelC,EAAM,UAAWA,EAAKyD,MAAMrB,IAC7C,IACCS,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCmB,SAAQ,WACPJ,GAAc,EAAO/G,EACvB,IAEF2E,EAAY7C,QAEZ+E,EAAiB7G,EACnB,IFzKyB,SAACM,GACPiB,MAAMC,KACrB9B,SAAS+B,iBAAiBnB,EAAiB6E,eAEpCvD,SAAQ,SAACxB,IApBM,SAACA,EAAaE,GACtC,IAAMQ,EAAYS,MAAMC,KACtBpB,EAAYqB,iBAAiBnB,EAAiBoB,gBAE1CX,EAAgBX,EAAYF,cAChCI,EAAiBqB,sBAGnBb,EAAUc,SAAQ,SAACvB,GACjBA,EAAaV,iBAAiB,SAAS,YAxBhB,SAACS,EAAaC,EAAcC,GACjDD,EAAaY,SAAS8G,gBACxB1H,EAAawB,kBAAkBxB,EAAa2H,QAAQC,cAC3C5H,EAAaY,SAASiH,aAC/B7H,EAAawB,kBAAkBxB,EAAa2H,QAAQG,cAEpD9H,EAAawB,kBAAkB,IAE5BxB,EAAaY,SAASC,MAGzBf,EAAeC,EAAaC,EAAcC,GAzBvB,SAACF,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAYF,cAAc,IAADM,OAAKH,EAAaI,GAAE,WAClEJ,EAAab,UAAUC,IAAIa,EAAiBI,iBAC5CH,EAAaK,YAAcP,EAAa+H,kBACxC7H,EAAaf,UAAUC,IAAIa,EAAiBK,WAC9C,CAkBI0H,CAAejI,EAAaC,EAAcC,EAI9C,CAYMgI,CAAmBlI,EAAaC,EAAcC,GAC9CO,EAAkBC,EAAWC,EAAeT,EAC9C,GACF,GACF,CAYIiI,CAAkBnI,EAAaE,EACjC,GACF,CEkKAkI,CAAiBlI,GAQjBgC,QAAQmG,IAAI,CDnOH/F,MAAMT,EAAY,OAASD,EAAQ,YAAa,CACrDY,QAAS,CACPC,cAAed,KAEhBe,KAAKZ,GAKDQ,MAAMT,EAAY,OAASD,EAAQ,SAAU,CAClDY,QAAS,CACPC,cAAed,KAEhBe,KAAKZ,KCuNPY,MAAK,SAAA4F,GAAuB,I,IAPJC,EAOIC,G,EAAA,E,4CAAAF,I,o2BAArBG,EAAQD,EAAA,GAAEE,EAAKF,EAAA,GAPED,EASLE,EARpBrE,EAAa5D,YAAc+H,EAAYlC,KACvChC,EAAmB7D,YAAc+H,EAAYpB,MAC7C7C,EAAWqE,MAAQ,yBAA2BJ,EAAYK,OAAS,IASjEF,EAAMlH,SAAQ,SAACsB,GACbkC,EAAelC,EAAM,SAAU2F,EAASvD,IAC1C,GACF,IACCS,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAwBFlB,EAAWnF,iBAAiB,UArB5B,SAAgCK,GDpKhC,IAAyBiJ,ECqKvBjJ,EAAIkH,iBACJH,GAAc,EAAM/G,IDtKGiJ,ECuKClE,EAAUqC,MDtK3B1E,MAAMT,EAAY,OAASD,EAAQ,mBAAoB,CAC5DW,OAAQ,QACRC,QAAS,CACPC,cAAed,EACf,eAAgB,oBAElByF,KAAMC,KAAKC,UAAU,CACnBsB,OAAQC,MAETnG,KAAKZ,IC+JLY,MAAK,SAACoG,GACLxE,EAAWqE,MAAQ,yBAAHvI,OAA4B0I,EAAOF,OAAM,IAC3D,IACCjD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCmB,SAAQ,WACPJ,GAAc,EAAO/G,EACvB,IAEF8E,EAAWhD,QAEX+E,EAAiB7G,EACnB,G","sources":["webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/scripts/cards.js"],"sourcesContent":["// Функция открытия модального окна\r\nfunction openModal(domModal) {\r\n  domModal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeModalEscape);\r\n}\r\n\r\n// Функция закрытия модального окна\r\nfunction closeModal(domModal) {\r\n  domModal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeModalEscape);\r\n}\r\n\r\nfunction closeModalEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openedPopup);\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","// включение валидации вызовом enableValidation\r\n// все настройки передаются при вызове\r\n/*\r\nenableValidation({\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}); \r\n*/\r\n\r\nconst showInputError = (formElement, inputElement, errorClassObject) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(errorClassObject.inputErrorClass);\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  errorElement.classList.add(errorClassObject.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, errorClassObject) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(errorClassObject.inputErrorClass);\r\n  errorElement.classList.remove(errorClassObject.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, errorClassObject) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else if (inputElement.validity.valueMissing) {\r\n    inputElement.setCustomValidity(inputElement.dataset.emptyMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, errorClassObject);\r\n  } else {\r\n    hideInputError(formElement, inputElement, errorClassObject);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, errorClassObject) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(errorClassObject.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    errorClassObject.submitButtonSelector\r\n  );\r\n  //  toggleButtonState(inputList,buttonElement,errorClassObject);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement, errorClassObject);\r\n      toggleButtonState(inputList, buttonElement, errorClassObject);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (errorClassObject) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(errorClassObject.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    /*\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    */\r\n    setEventListeners(formElement, errorClassObject);\r\n  });\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, errorClassObject) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(errorClassObject.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(errorClassObject.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n}\r\n\r\n/*\r\nclearValidation(profileForm, validationConfig);\r\n */\r\n\r\nconst clearValidation = (formElement, errorClassObject) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(errorClassObject.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    errorClassObject.submitButtonSelector\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    //  inputElement.addEventListener('input', function () {\r\n    hideInputError(formElement, inputElement, errorClassObject);\r\n    inputElement.setCustomValidity(\"\");\r\n    //  });\r\n  });\r\n  formElement.reset()\r\n  toggleButtonState(inputList, buttonElement, errorClassObject);\r\n};\r\n\r\nexport { enableValidation, clearValidation };\r\n","const apiToken = \"7e5bc3b7-9b3c-4476-a6ed-5dc02c289290\";\r\nconst apiId = \"wff-cohort-10\";\r\nconst apiServer = \"https://mesto.nomoreparties.co\";\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(res.status);\r\n}\r\n\r\n//Загрузка информации о пользователе с сервера\r\nconst getUserInfo = () => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me\", {\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\n//Загрузка карточек с сервера\r\nconst getCardsList = () => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards\", {\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\n//Редактирование профиля\r\nfunction patchUserInfo(userInfo) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: userInfo.name,\r\n      about: userInfo.about,\r\n    }),\r\n  }).then(handleResponse);\r\n}\r\n\r\n//Добавление новой карточки\r\nconst patchCard = (cardInfo) => {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: cardInfo.name,\r\n      link: cardInfo.link,\r\n    }),\r\n  }).then(handleResponse);\r\n};\r\n\r\n//Удаление карточки\r\nfunction deleteCard(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  })\r\n  .then(handleResponse);\r\n}\r\n\r\n//Постановка лайка\r\nfunction putLike(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/likes/\" + id, {\r\n    method: \"put\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then(handleResponse);\r\n}\r\n\r\n////Снятие лайка\r\nfunction deleteLike(id) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/cards/likes/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: apiToken,\r\n    },\r\n  }).then(handleResponse);\r\n}\r\n\r\n//Редактирование аватара\r\nfunction patchUserAvatar(linkAvatarValue) {\r\n  return fetch(apiServer + \"/v1/\" + apiId + \"/users/me/avatar\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: apiToken,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      avatar: linkAvatarValue,\r\n    }),\r\n  }).then(handleResponse);\r\n}\r\n\r\nexport {\r\n  getUserInfo,\r\n  getCardsList,\r\n  patchUserInfo,\r\n  patchCard,\r\n  deleteCard,\r\n  putLike,\r\n  deleteLike,\r\n  patchUserAvatar,\r\n};\r\n","/*=====================\nБлок импорта\n=======================*/\nimport \"./pages/index.css\"; //Главный CSS\nimport { addCard, removeCardFromDom, checkLikeCard } from \"./scripts/cards.js\"; //функции карточек\nimport { openModal, closeModal } from \"./scripts/modal.js\"; //функции попапов\nimport { enableValidation, clearValidation } from \"./scripts/validation.js\";\nimport {\n  getUserInfo,\n  getCardsList,\n  patchUserInfo,\n  patchCard,\n  deleteCard,\n  putLike,\n  deleteLike,\n  patchUserAvatar,\n} from \"./scripts/api.js\";\n\n/*=====================\nБлок констант\n=======================*/\nconst cardList = document.querySelector(\".places__list\"); // список карточек\nconst cardTemplate = document.querySelector(\"#card-template\").content; // темплейт карточки\nconst addCardObj = {\n  item: \"\",\n  removeCard: \"\",\n  cardTemplate: cardTemplate,\n  addLikeToCard: \"\",\n  zoomCardImg: zoomCardImg,\n}; // объект с необходимым содержимым для функции создания карточки\nconst buttonNewCard = document.querySelector(\".profile__add-button\"); // кнопка добавления новой карточки\nconst buttonEdit = document.querySelector(\".profile__edit-button\"); // кнопка редактирования заголовка страницы\nconst buttonEditAvatar = document.querySelector(\".profile__image\"); // кнопка редактирования заголовка страницы\n\nconst modalNewCard = document.querySelector(\".popup_type_new-card\"); // попап добавления новой карточки\nconst modalEdit = document.querySelector(\".popup_type_edit\"); // попап добавления новой карточки\nconst modalEditAvatar = document.querySelector(\".popup_type_edit-avatar\"); // попап добавления новой карточки\nconst modalImageZoom = document.querySelector(\".popup_type_image\"); // попап увеличенного просмотра карточки\n\nconst popups = document.querySelectorAll(\".popup\"); //Массив всех всплывающих окон с общим классом\n\nconst profileForm = document.querySelector('[name=\"edit-profile\"]'); // форма редактирования шапки страницы\nconst nameInput = profileForm.querySelector('[name=\"name\"]'); // поле ввода имени в форме для шапки страницы\nconst jobInput = profileForm.querySelector('[name=\"description\"]'); // поле ввода описания в форме для шапки страницы\n\nconst profileTitle = document.querySelector(\".profile__title\"); // имя в шапке страницы\nconst profileDescription = document.querySelector(\".profile__description\"); // описание в шапке страницы\nconst profileImg = document.querySelector(\".profile__image\"); // Изображение в шапке\n\nconst profileData = {\n  profileTitle: profileTitle,\n  profileDescription: profileDescription,\n  profileImg: profileImg,\n};\n\nconst formNewCard = document.querySelector('[name=\"new-place\"]');\nconst placeName = formNewCard.querySelector('[name=\"place-name\"]');\nconst linkUrl = formNewCard.querySelector('[name=\"link\"]');\n\nconst avatarForm = document.querySelector('[name=\"new-avatar\"]'); // форма редактирования шапки страницы\nconst avatarUrl = avatarForm.querySelector('[name=\"link\"]');\n\nconst modalDelete = document.querySelector(\".popup_type_confirm\"); // попап подтверждения удаления\nconst formDelete = modalDelete.querySelector('[name=\"delete-confirm\"]');\nlet cardForDelete = {};\n\nconst errorClassObject = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\", //класс ошибки для поля ввода\n  errorClass: \"popup__error_visible\", //класс для текста ошибки под полем ввода\n};\n\n/*=====================\nБлок функций\n=======================*/\n// @todo: Функция zoom карточки\nfunction zoomCardImg(evt) {\n  const popupImage = document.querySelector(\".popup__image\"); //изображение на всплывающем окне \"Зум изображения\"\n  const popupCaption = document.querySelector(\".popup__caption\"); //подпись на всплывающем окне \"Зум изображения\"\n  popupImage.src = evt.target.src;\n  popupImage.alt = evt.target.alt;\n  popupCaption.textContent = evt.target.alt;\n  openModal(modalImageZoom);\n}\n\nformDelete.addEventListener(\"submit\", (evt) => {\n  evt.preventDefault();\n  renderDeleting(true, evt);\n  deleteCard(cardForDelete._id)\n    .then(() => {\n      removeCardFromDom(cardForDelete.cardElement);\n      closeModal(modalDelete);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderDeleting(false, evt);\n    });\n});\n\nfunction addCardElement(item, method, userID) {\n  addCardObj.item = item;\n  addCardObj.removeCard = () => {\n    cardForDelete._id = item._id;\n    cardForDelete.cardElement = cardElement;\n    openModal(modalDelete);\n  };\n  addCardObj.addLikeToCard = (evt) => {\n    const likeMethod = evt.target.classList.contains(\"card__like-button_is-active\")? deleteLike: putLike;\n    likeMethod(item._id)\n      .then((newItem) => {\n        checkLikeCard(cardElement, newItem);\n      })\n      .catch((err) => console.log(err));\n  };\n  const cardElement = addCard(addCardObj, userID);\n  cardList[method](cardElement);\n}\n\n// добавление на попап плавного открытия и закрытия\nmodalNewCard.classList.add(\"popup_is-animated\");\nmodalEdit.classList.add(\"popup_is-animated\");\nmodalEditAvatar.classList.add(\"popup_is-animated\");\nmodalImageZoom.classList.add(\"popup_is-animated\");\n\n// Слушатель открытия popUp новой карты\nbuttonNewCard.addEventListener(\"click\", () => {\n  const formElement = modalNewCard.querySelector(errorClassObject.formSelector);\n  clearValidation(formElement, errorClassObject);\n  openModal(modalNewCard);\n});\n\n// Слушатель открытия popUp редактирования аватара\nbuttonEditAvatar.addEventListener(\"click\", () => {\n  const formElement = modalEditAvatar.querySelector(\n    errorClassObject.formSelector\n  );\n  clearValidation(formElement, errorClassObject);\n  openModal(modalEditAvatar);\n});\n\n// @Слушатель открытия popUp редактирования шапки страницы\nbuttonEdit.addEventListener(\"click\", () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  const formElement = modalEdit.querySelector(errorClassObject.formSelector);\n  clearValidation(formElement, errorClassObject);\n  openModal(modalEdit);\n});\n\npopups.forEach((popup) => {\n  popup.addEventListener(\"mousedown\", (evt) => {\n    if (evt.target.classList.contains(\"popup_is-opened\") || \n        evt.target.classList.contains(\"popup__close\")) {\n      closeModal(popup);\n    }\n  });\n});\n\n// Обработчик «отправки» формы редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n\n  const nameInputValue = nameInput.value;\n  const jobInputValue = jobInput.value;\n\n  const userInfo = {\n    name: nameInputValue,\n    about: jobInputValue,\n  };\n\n  renderLoading(true, evt);\n\n  patchUserInfo(userInfo)\n    .then((newUserInfo) => {\n      profileTitle.textContent = newUserInfo.name;\n      profileDescription.textContent = newUserInfo.about;\n      closePopupSubmit(evt);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n}\n\n// слушатель «отправки» формы редактирования профиля\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n\n// функция закрытия формы при отправке\nfunction closePopupSubmit(evt) {\n  const modal = evt.target.closest(\".popup_is-opened\");\n  closeModal(modal);\n}\n\n// Обработчик «отправки» формы дабавления карточки\nfunction handleCardFormSubmit(evt) {\n  evt.preventDefault();\n\n  const placeNameValue = placeName.value;\n  const linkUrlValue = linkUrl.value;\n\n  const newCardItem = {\n    name: placeNameValue,\n    link: linkUrlValue,\n  };\n  renderLoading(true, evt);\n\n  patchCard(newCardItem)\n    .then((item) => {\n      addCardElement(item, \"prepend\", item.owner._id);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n\n  formNewCard.reset();\n\n  closePopupSubmit(evt);\n}\n\n// слушатель «отправки» формы добавления карточки\nformNewCard.addEventListener(\"submit\", handleCardFormSubmit);\n\nenableValidation(errorClassObject);\n\nfunction changeProfileData(profileData) {\n  profileTitle.textContent = profileData.name;\n  profileDescription.textContent = profileData.about;\n  profileImg.style = \"background-image: url(\" + profileData.avatar + \")\";\n}\n\nPromise.all([getUserInfo(), getCardsList()])\n  .then(([userData, cards]) => {\n\n    changeProfileData(userData);\n\n\n    cards.forEach((item) => {\n      addCardElement(item, \"append\", userData._id);\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\n// Обработчик «отправки» формы изменения аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(true, evt);\n  const linkAvatarValue = avatarUrl.value;\n  patchUserAvatar(linkAvatarValue)\n    .then((result) => {\n      profileImg.style = `background-image: url(${result.avatar})`;\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      renderLoading(false, evt);\n    });\n\n  avatarForm.reset();\n\n  closePopupSubmit(evt);\n}\n\n// слушатель «отправки» формы редактирования профиля\navatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n\nfunction renderLoading(isLoading, evt) {\n  const button = evt.target.querySelector(\".popup__button\");\n  button.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\"\n}\n\nfunction renderDeleting(isLoading, evt) {\n  const button = evt.target.querySelector(\".popup__button\");\n  button.textContent = isLoading ? \"Удаляем...\" : \"Да\"\n}\n","\n// @todo: Функция создания карточки\n\nfunction addCard(addCardObj, userID) {\n  const cardElement = addCardObj.cardTemplate\n    .querySelector(\".card\")\n    .cloneNode(true);\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const imgElement = cardElement.querySelector(\".card__image\");\n  const likeNumber = cardElement.querySelector(\".card__like-number\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n\n  imgElement.src = addCardObj.item.link;\n  imgElement.alt = addCardObj.item.name;\n  cardTitle.textContent = addCardObj.item.name;\n  likeNumber.textContent = addCardObj.item.likes.length;\n\n  function hasMyLike(num) {\n    return num._id === userID;\n  }\n\n  if (addCardObj.item.likes.some(hasMyLike)) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  } \n\n  likeButton.addEventListener(\"click\", addCardObj.addLikeToCard);\n\n  imgElement.addEventListener(\"click\", addCardObj.zoomCardImg);\n\n  if (addCardObj.item.owner._id === userID) {\n    deleteButton.addEventListener(\"click\", addCardObj.removeCard);\n  } else {\n    deleteButton.remove();\n  }\n\n  return cardElement;\n}\n\n// @todo: Функция удаления карточки\nfunction removeCardFromDom(cardElement) {\n  cardElement.remove();\n}\n\n// @todo: Функция лайка карточки\nfunction checkLikeCard(cardElement, newItem) {\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeNumber = cardElement.querySelector(\".card__like-number\");\n  likeNumber.textContent = newItem.likes.length;\n  likeButton.classList.toggle(\"card__like-button_is-active\");\n}\n\nexport { addCard, removeCardFromDom, checkLikeCard };\n"],"names":["openModal","domModal","classList","add","document","addEventListener","closeModalEscape","closeModal","remove","removeEventListener","evt","key","querySelector","hideInputError","formElement","inputElement","errorClassObject","errorElement","concat","id","inputErrorClass","errorClass","textContent","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","reset","apiToken","apiId","apiServer","handleResponse","res","ok","json","Promise","reject","status","putLike","fetch","method","headers","authorization","then","deleteLike","cardList","addCardObj","item","removeCard","cardTemplate","content","addLikeToCard","zoomCardImg","popupImage","popupCaption","src","target","alt","modalImageZoom","buttonNewCard","buttonEdit","buttonEditAvatar","modalNewCard","modalEdit","modalEditAvatar","popups","profileForm","nameInput","jobInput","profileTitle","profileDescription","profileImg","formNewCard","placeName","linkUrl","avatarForm","avatarUrl","modalDelete","formDelete","cardForDelete","formSelector","addCardElement","userID","_id","cardElement","contains","newItem","likeButton","likes","length","toggle","checkLikeCard","catch","err","console","log","cloneNode","deleteButton","imgElement","likeNumber","cardTitle","link","name","num","owner","addCard","closePopupSubmit","closest","renderLoading","isLoading","renderDeleting","preventDefault","finally","value","popup","userInfo","about","body","JSON","stringify","patchUserInfo","newUserInfo","cardInfo","newCardItem","patternMismatch","dataset","errorMessage","valueMissing","emptyMessage","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","all","_ref","profileData","_ref2","userData","cards","style","avatar","linkAvatarValue","result"],"sourceRoot":""}